#!/bin/bash

set -e

START_TIME=`date`

echo STARTING BUILD

mkdir local
LPREFIX=`pwd`/local
mkdir depbuild

tar -C depbuild -xf third-party/ecl-13.5.1.tgz
tar -C depbuild -xf third-party/gecode-4.3.3.tar.gz

cd depbuild/ecl-13.5.1
ECLFLAGS="-O2 -march=native -pipe -fomit-frame-pointer"
env CFLAGS="$ECLFLAGS" CXXFLAGS="$ECLFLAGS" ./configure --enable-threads \
    --with-cxx --with-dffi=included --enable-boehm=included --enable-libatomic=included \
    --enable-unicode --prefix=$LPREFIX
make
make install
cd ../..

cd depbuild/gecode-4.3.3
GECODEFLAGS="-O3 -march=native -pipe -fomit-frame-pointer"
env CFLAGS="$GECODEFLAGS" CXXFLAGS="$GECODEFLAGS" ./configure --disable-gist \
    --disable-qt --disable-examples --disable-flatzinc --disable-float-vars \
    --prefix=$LPREFIX
make
make install
cd ../..

echo DEPENDENCIES installed to local
export PATH=`pwd`/local/bin:$PATH
export C_INCLUDE_PATH=`pwd`/local/include
export CPLUS_INCLUDE_PATH=$C_INCLUDE_PATH
if [ `which ecl` != `pwd`/local/bin/ecl ]; then
    echo ecl not found at expected location. which ecl reports
    which ecl
    exit 1
fi

echo BEGIN BUILDING ASGL
export ASGL_HOME_PREC=`pwd`
ASGLFLAGS="-O3 -march=native -pipe -fomit-frame-pointer"
env CFLAGS="$ASGLFLAGS" CXXFLAGS="$ASGLFLAGS" ./configure --without-gist
make LD_LIBRARY_PATH=`pwd`/local/lib install-v1
mv bin/asgl bin/asgl_kernel
echo '#!/bin/bash' >bin/asgl
echo "export LD_LIBRARY_PATH=`pwd`/local/lib:$LD_LIBRARY_PATH" >>bin/asgl
echo "DIR=`pwd`/bin" >>bin/asgl
echo 'exec "$DIR/asgl_kernel" "$@"' >>bin/asgl
cat bin/asgl
chmod +x bin/asgl

export PATH=`pwd`/bin:$PATH
make check

echo BUILD FINISHED SUCCESSFULLY!
echo You can start the solver with ./bin/asgl

END_TIME=`date`
echo Build was started at $START_TIME
echo Build finished at $END_TIME
